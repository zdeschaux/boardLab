        ## A shortcut
        cr = self.cr

        ## First, let's shift 0,0 to be in the center of page
        ## This means:
        ##  -y | -y
        ##  -x | +x
        ## ----0------
        ##  -x | +x
        ##  +y | +y

        #matrix = cairo.Matrix ( 1, 0, 0, 1, width/2, height/2 )
        #cr.transform ( matrix ) # Make it so...

        ## Now save that situation so that we can mess with it.
        ## This preserves the last context ( the one at 0,0)
        ## and let's us do new stuff.
        cr.save ( )

        ## Now attempt to rotate something around a point
        ## Use a matrix to change the shape's position and rotation.

        ## First, make a matrix. Don't look at me, I only use this stuff :)
        ThingMatrix = cairo.Matrix ( 1, 0, 0, 1, 0, 0 )

        ## Next, move the drawing to it's x,y
        cairo.Matrix.translate ( ThingMatrix, self.x, self.y )
        cr.transform ( ThingMatrix ) # Changes the context to reflect that

        ## Now, change the matrix again to:
        cairo.Matrix.translate( ThingMatrix, self.rx, self.ry ) # move it all to point of rotation
        cairo.Matrix.rotate( ThingMatrix, self.rot ) # Do the rotation
        cairo.Matrix.translate( ThingMatrix, -self.rx, -self.ry ) # move it back again
        cairo.Matrix.scale( ThingMatrix, self.sx, self.sy ) # Now scale it all
        cr.transform ( ThingMatrix ) # and commit it to the context

        ## Now, whatever is draw is "under the influence" of the 
        ## context and all that matrix magix we just did.

        self.drawCairo(cr)
        #self.drawCairoStuff(cr)

        ## Let's inc the angle a little
        self.rot += 0.10

        ## Now mess with scale too
        #self.sx += 0 # Change to 0 to see if rotation is working...
        #if self.sx > 4: self.sx=0.5
        #self.sy = self.sx

        ## We restore to a clean context, to undo all that hocus-pocus
        cr.restore( )

        ## Let's draw a crosshair so we can identify 0,0
        ## Drawn last to be above the red square.
        #self.drawcross ( cr )         
